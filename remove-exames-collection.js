/**
 * Script para remover a cole√ß√£o 'exames' antiga do MongoDB
 * 
 * ATEN√á√ÉO: Este script ir√° deletar permanentemente a cole√ß√£o 'exames'
 * e todos os seus dados. Use com cuidado!
 * 
 * Para executar:
 * mongosh pacientes_db remove-exames-collection.js
 * 
 * Ou manualmente no mongosh:
 * use pacientes_db
 * db.exames.drop()
 */

// Conectar ao banco de dados
const db = db.getSiblingDB('pacientes_db');

console.log('='.repeat(60));
console.log('REMO√á√ÉO DA COLE√á√ÉO ANTIGA "exames"');
console.log('='.repeat(60));

// Verificar se a cole√ß√£o existe
const collections = db.getCollectionNames();
if (!collections.includes('exames')) {
  console.log('‚úÖ A cole√ß√£o "exames" n√£o existe. Nada a fazer.');
  quit(0);
}

// Contar documentos antes de deletar
const count = db.exames.countDocuments();
console.log(`\nüìä Documentos encontrados na cole√ß√£o "exames": ${count}`);

if (count > 0) {
  console.log('\n‚ö†Ô∏è  ATEN√á√ÉO: A cole√ß√£o cont√©m dados!');
  console.log('   Se voc√™ deseja fazer backup antes de deletar, cancele agora (Ctrl+C)');
  console.log('   e execute: mongoexport --db=pacientes_db --collection=exames --out=exames_backup.json');
  console.log('\n   Aguardando 5 segundos antes de continuar...');
  
  // Aguardar 5 segundos
  sleep(5000);
}

// Deletar a cole√ß√£o
console.log('\nüóëÔ∏è  Removendo cole√ß√£o "exames"...');
const result = db.exames.drop();

if (result) {
  console.log('‚úÖ Cole√ß√£o "exames" removida com sucesso!');
  console.log('\nüìù Resumo:');
  console.log(`   - Documentos deletados: ${count}`);
  console.log('   - Cole√ß√£o removida: exames');
  console.log('\n‚úÖ A cole√ß√£o "exames_preop" permanece intacta.');
} else {
  console.log('‚ùå Erro ao remover a cole√ß√£o "exames"');
  quit(1);
}

console.log('\n' + '='.repeat(60));
console.log('OPERA√á√ÉO CONCLU√çDA');
console.log('='.repeat(60));
